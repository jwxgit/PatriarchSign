apply plugin: 'com.android.application'


//定义时间
def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "com.jwx.patriarchsign"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 2
        versionName "1.0.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti -fexceptions"
            }
        }
        ndk {
            abiFilters 'armeabi', 'armeabi-v7a'
        }
    }


    //签名
    signingConfigs {
//        debug {
//            storeFile file("D:\\JWXWORK\\JwxProject\\keystore\\debug\\jwx_debug.jks")
//            storePassword "debug2017"
//            keyAlias "debug"
//            keyPassword "debug2017"
//        }
        release {// 自己的签名文件
            storeFile file("D:\\Developement\\keystore\\release\\jwx.jks")
            storePassword "jwx2017"
            keyAlias "jwx"
            keyPassword "jwx2017"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆
            minifyEnabled false
            //Zipalign优化            zipAlignEnabled false
            //签名
            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为app_v1.0_2015-xx-xx_xxxx.apk
                        //def fileName = "app_v${defaultConfig.versionName}_${releaseTime()}.apk"
                        def fileName = "Sign_vc${defaultConfig.versionCode}_vn${defaultConfig.versionName}_${releaseTime()}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    repositories {
        flatDir {
            dirs 'libs'
        }
        compile(name: 'peauth_v4.2.1', ext: 'aar')
    }
    compile 'org.xutils:xutils:3.3.36'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.yanzhenjie:permission:1.1.2'
    compile 'com.github.castorflex.smoothprogressbar:library:1.1.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
}

